version: 2.1

orbs:
  win: circleci/windows@2.2.0

workflows:
  workflow:
    jobs:
      - test-with-preinstalled-php:
          name: PHP 7.3
          docker-image: cimg/php:7.3
      - test-with-preinstalled-php:
          name: PHP 7.4
          docker-image: cimg/php:7.4
      - test-with-preinstalled-php:
         name: PHP 8.0
         docker-image: cimg/php:8.0
      - test-on-windows

jobs:
  test-on-windows:
    executor:
      name: win/default
      shell: powershell.exe

    environment:
      LD_INCLUDE_INTEGRATION_TESTS: 1

    steps:
      - checkout
      - run:
          name: install php and java support
          command: choco install -y php composer javaruntime
      - run:
          name: download wiremock
          command: Invoke-WebRequest -Uri https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-jre8-standalone/2.31.0/wiremock-jre8-standalone-2.31.0.jar -UseBasicParsing -OutFile wiremock.jar
      - run:
          name: start wiremock
          background: true
          command: java -jar ./wiremock.jar
      - run:
          name: wait for wiremock to be available
          command: PowerShell -Command Start-Sleep -Seconds 5
      - run:
          name: install dependencies
          command: composer install --no-progress
      - run:
          name: run tests
          command: .\vendor\bin\phpunit

  test-with-preinstalled-php:
    parameters:
      docker-image:
        type: string

    environment:
      LD_INCLUDE_INTEGRATION_TESTS: 1

    docker:
      - image: <<parameters.docker-image>>
      - image: wiremock/wiremock

    steps:
      - setup_remote_docker
      - checkout
      - run:
          name: validate composer.json
          command: composer validate
      - run:
          name: install dependencies
          command: composer install --no-progress
      - run:
          name: psalm linting
          command: ./vendor/bin/psalm --no-cache
      - run:
          name: php-cs-fixer check
          command: composer cs-check
      - run:
          name: run tests with highest compatible dependency versions
          command: php -d xdebug.mode=coverage vendor/bin/phpunit
          enviroment:
            XDEBUG_MODE: coverage
      - store_test_results:
          path: build/phpunit
      - store_artifacts:
          path: build/phpunit
