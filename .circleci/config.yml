version: 2.1

orbs:
  win: circleci/windows@2.2.0

workflows:
  workflow:
    jobs:
      - test-on-linux:
          matrix:
              parameters:
                  php-version: ["8.0", "8.1"]
                  composer-dependencies: ["lowest", "highest"]
      - test-on-windows

jobs:
  test-on-windows:
    executor:
      name: win/default
      shell: powershell.exe

    environment:
      LD_INCLUDE_INTEGRATION_TESTS: 1

    steps:
      - checkout
      - run:
          name: install php and java support
          command: choco install -y php composer javaruntime
      - run:
          name: download wiremock
          command: Invoke-WebRequest -Uri https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-jre8-standalone/2.31.0/wiremock-jre8-standalone-2.31.0.jar -UseBasicParsing -OutFile wiremock.jar
      - run:
          name: start wiremock
          background: true
          command: java -jar ./wiremock.jar
      - run:
          name: wait for wiremock to be available
          command: PowerShell -Command Start-Sleep -Seconds 5
      - run:
          name: install dependencies
          command: composer install --no-progress
      - run:
          name: run tests
          command: .\vendor\bin\phpunit

  test-on-linux:
    parameters:
      php-version:
        type: string
      composer-dependencies:
        type: string

    environment:
      LD_INCLUDE_INTEGRATION_TESTS: 1
      TEST_HARNESS_PARAMS: -junit build/contract-tests-output/junit-results.xml

    docker:
      - image: cimg/php:<<parameters.php-version>>
      - image: wiremock/wiremock

    steps:
      - setup_remote_docker
      - checkout

      - run:
          name: Install xdebug
          command: sudo pecl install xdebug
      - run:
          name: validate composer.json
          command: composer validate
      - run:
          name: install dependencies
          command: composer install --no-progress
      - when:
          condition:
            equal: [ <<parameters.composer-dependencies>>, "lowest" ]
          steps:
            - run:
                name: downgrade to lowest versions
                command: composer update --prefer-lowest --prefer-stable

      - run:
          name: run tests
          command: make test
      - run:
          name: lint
          command: make lint

      - run:
          name: build contract test service
          command: make build-contract-tests
      - run:
          name: start contract test service
          command: make start-contract-test-service
          background: true
      - run:
          name: run contract tests
          command: mkdir -p build/contract-tests-output && make run-contract-tests

      - store_test_results:
          path: build/phpunit/junit.xml
      - store_test_results:
          path: build/contract-tests-output
      - store_artifacts:
          path: build/phpunit/html-coverage/
          destination: coverage/
